// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DisplayResults should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    sentences={
        Array [
            Object {
              "sentence_id": 0,
              "text": "I hope that we can reach an amicable understanding and a solution to this problem.",
              "tones": Array [
                Object {
                  "score": 0.897416,
                  "tone_id": "analytical",
                  "tone_name": "Analytical",
                },
                Object {
                  "score": 0.647986,
                  "tone_id": "tentative",
                  "tone_name": "Tentative",
                },
                Object {
                  "score": 0.44646,
                  "tone_id": "sadness",
                  "tone_name": "Sadness",
                },
              ],
            },
            Object {
              "sentence_id": 1,
              "text": "Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.",
              "tones": Array [
                Object {
                  "score": 0.580387,
                  "tone_id": "joy",
                  "tone_name": "Joy",
                },
                Object {
                  "score": 0.550576,
                  "tone_id": "analytical",
                  "tone_name": "Analytical",
                },
              ],
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Analyzed: 
</h3>,
        <p>
          <span
                    className="analytical"
          >
                     
                    I hope that we can reach an amicable understanding and a solution to this problem.
          </span>
          <span
                    className="joy"
          >
                     
                    Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.
          </span>
</p>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Analyzed: ",
        },
        "ref": null,
        "rendered": "Analyzed: ",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="analytical"
>
               
              I hope that we can reach an amicable understanding and a solution to this problem.
</span>,
            <span
              className="joy"
>
               
              Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.
</span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "I hope that we can reach an amicable understanding and a solution to this problem.",
              ],
              "className": "analytical",
            },
            "ref": null,
            "rendered": Array [
              " ",
              "I hope that we can reach an amicable understanding and a solution to this problem.",
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.",
              ],
              "className": "joy",
            },
            "ref": null,
            "rendered": Array [
              " ",
              "Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.",
            ],
            "type": "span",
          },
        ],
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Analyzed: 
</h3>,
          <p>
            <span
                        className="analytical"
            >
                         
                        I hope that we can reach an amicable understanding and a solution to this problem.
            </span>
            <span
                        className="joy"
            >
                         
                        Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.
            </span>
</p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Analyzed: ",
          },
          "ref": null,
          "rendered": "Analyzed: ",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="analytical"
>
                 
                I hope that we can reach an amicable understanding and a solution to this problem.
</span>,
              <span
                className="joy"
>
                 
                Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.
</span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "I hope that we can reach an amicable understanding and a solution to this problem.",
                ],
                "className": "analytical",
              },
              "ref": null,
              "rendered": Array [
                " ",
                "I hope that we can reach an amicable understanding and a solution to this problem.",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.",
                ],
                "className": "joy",
              },
              "ref": null,
              "rendered": Array [
                " ",
                "Our clients have done business together previously, and my client is interested in maintaining a profitable business- partner relationship with Mr. Compresi, assuming that your client can fulfill Mr. Farley’s order at the price promised in his letter.",
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`DisplayResults shuold match snapshot when passed different results 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    results={
        Object {
            "sentences_tone": Array [
              Object {
                "sentence_id": 0,
                "text": "In the muddy peaceful center of this town.",
                "tones": Array [],
              },
              Object {
                "sentence_id": 1,
                "text": "Tell me off in the hotel lobby right in front of all the bellboys, and the over friendly concierge",
                "tones": Array [
                  Object {
                    "score": 0.638987,
                    "tone_id": "confident",
                    "tone_name": "Confident",
                  },
                ],
              },
              Object {
                "sentence_id": 2,
                "text": "A shady lane, Everybody wants one.",
                "tones": Array [],
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Analyzed: 
</h3>,
        <p />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Analyzed: ",
        },
        "ref": null,
        "rendered": "Analyzed: ",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Analyzed: 
</h3>,
          <p />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Analyzed: ",
          },
          "ref": null,
          "rendered": "Analyzed: ",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
